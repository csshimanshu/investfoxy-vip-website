---
import Header from '../components/Header.astro';
import content from '../data/content.json';

const { title: pageTitle } = Astro.props;
const siteTitle = content.branding?.title || 'Investfoxy Trading - Private Trading Discord Membership Group';
const finalTitle = pageTitle || siteTitle;
const favicon = content.branding?.favicon || '/favicon.svg';
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={favicon} />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Orbitron:wght@400;500;600;700&display=swap" rel="stylesheet">
    <title>{finalTitle}</title>
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>

    <style>
      html {
        scroll-behavior: smooth;
        scroll-padding-top: 2rem;
      }
    </style>
  </head>
  <body class="antialiased bg-gradient-to-br from-black to-primary-dark text-white min-h-screen">
    <Header />
    <main class="pt-16">
      <slot />
    </main>
    <button
      id="scrollToTop"
      class="fixed bottom-6 right-6 z-50 flex items-center gap-2 px-4 py-3 rounded-full bg-accent/80 hover:bg-accent text-white shadow-lg transform scale-0 transition-all duration-300 backdrop-blur-sm hover:scale-105 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2 focus:ring-offset-black opacity-0"
      aria-label="Scroll to top"
    >
      <span class="text-sm font-medium">Scroll to top</span>
      <svg
        class="w-5 h-5"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="3"
          d="M5 10l7-7m0 0l7 7m-7-7v18"
        ></path>
      </svg>
    </button>
    
    <script>
      // Handle smooth scrolling
      document.addEventListener('astro:page-load', () => {
        const navLinks = document.querySelectorAll('a[href^="#"]');
        
        navLinks.forEach(link => {
          link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = link.getAttribute('href') || '';
            // Type assertion for the target element
            const targetElement = document.querySelector<HTMLElement>(targetId);
            
            if (targetElement) {
              targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });

        // Update active navigation state
        function updateActiveNavLink() {
          const sections = document.querySelectorAll<HTMLElement>('section[id]');
          const navLinks = document.querySelectorAll('.nav-link');
          
          const scrollPosition = window.scrollY;
          
          sections.forEach(section => {
            const sectionTop = section.offsetTop - 100;
            const sectionHeight = section.clientHeight;
            const sectionId = section.getAttribute('id');
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
              // Update mobile and desktop navigation
              navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === `#${sectionId}`) {
                  link.classList.add('active');
                }
              });

              // Update nav dots
              document.querySelectorAll('.nav-dot').forEach(dot => {
                const parentLink = dot.closest('a');
                if (parentLink && parentLink.getAttribute('href') === `#${sectionId}`) {
                  dot.classList.add('opacity-100');
                } else {
                  dot.classList.remove('opacity-100');
                }
              });
            }
          });
        }

        // Throttle scroll event
        let isScrolling = false;
        window.addEventListener('scroll', () => {
          if (!isScrolling) {
            window.requestAnimationFrame(() => {
              updateActiveNavLink();
              isScrolling = false;
            });
            isScrolling = true;
          }
        });

        // Initial active state
        updateActiveNavLink();
      });
    </script>
  </body>
</html>

<style is:global>
  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  :root {
    --color-primary: #2D0058;
    --color-primary-light: #3D0078;
    --color-primary-dark: #1D0038;
    --accent: #8B5CF6;
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Inter', sans-serif;
    background-size: 200% 200%;
    animation: gradient 15s ease infinite;
  }

  .gradient-text {
    background: linear-gradient(to right, var(--accent), var(--color-primary-light));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  #scrollToTop {
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  #scrollToTop.show {
    transform: scale(1);
    opacity: 1;
    visibility: visible;
  }
  
  @media (hover: hover) {
    #scrollToTop:hover {
      transform: scale(1.05);
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);
    }
  }
  
  @media (prefers-reduced-motion: reduce) {
    #scrollToTop {
      transition: opacity 0.15s ease;
    }
  }
</style>
