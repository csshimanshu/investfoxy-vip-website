---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { getAuditLog } from '../../lib/auth';

const logs = getAuditLog();
---

<AdminLayout title="Audit Log">
  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">
        System Audit Log
      </h3>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">
        Recent system activities and login attempts.
      </p>
    </div>
    
    <!-- Filters -->
    <div class="px-4 py-3 border-t border-gray-200">
      <div class="grid grid-cols-1 gap-4 sm:grid-cols-4">
        <div>
          <label for="action-filter" class="block text-sm font-medium text-gray-700">Action</label>
          <select id="action-filter" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
            <option value="">All Actions</option>
            <option value="login">Login</option>
            <option value="failed_login">Failed Login</option>
            <option value="logout">Logout</option>
          </select>
        </div>
        <div>
          <label for="date-from" class="block text-sm font-medium text-gray-700">From Date</label>
          <input type="date" id="date-from" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
        </div>
        <div>
          <label for="date-to" class="block text-sm font-medium text-gray-700">To Date</label>
          <input type="date" id="date-to" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary focus:border-primary sm:text-sm rounded-md">
        </div>
        <div class="flex items-end">
          <button id="apply-filters" class="w-full inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
            Apply Filters
          </button>
        </div>
      </div>
    </div>

    <!-- Log Table -->
    <div class="flex flex-col">
      <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
        <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
          <div class="overflow-hidden border-b border-gray-200">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Timestamp
                  </th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Action
                  </th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Username
                  </th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    IP Address
                  </th>
                  <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Details
                  </th>
                </tr>
              </thead>
              <tbody id="log-table-body" class="bg-white divide-y divide-gray-200">
                {logs.map((log) => (
                  <tr>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {new Date(log.timestamp).toLocaleString()}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                        ${log.action === 'login' ? 'bg-green-100 text-green-800' : 
                          log.action === 'failed_login' ? 'bg-red-100 text-red-800' : 
                          'bg-gray-100 text-gray-800'}`}>
                        {log.action}
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {log.username}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {log.ip}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {JSON.stringify(log.details)}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function formatDate(date) {
      return date.toLocaleString();
    }

    function createTableRow(log) {
      return `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${formatDate(new Date(log.timestamp))}
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
              ${log.action === 'login' ? 'bg-green-100 text-green-800' : 
                log.action === 'failed_login' ? 'bg-red-100 text-red-800' : 
                'bg-gray-100 text-gray-800'}">
              ${log.action}
            </span>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${log.username}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${log.ip}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
            ${JSON.stringify(log.details)}
          </td>
        </tr>
      `;
    }

    async function updateTable() {
      const actionFilter = document.getElementById('action-filter').value;
      const dateFrom = document.getElementById('date-from').value;
      const dateTo = document.getElementById('date-to').value;

      try {
        const response = await fetch('/api/audit-log', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            action: actionFilter || undefined,
            startDate: dateFrom || undefined,
            endDate: dateTo || undefined
          })
        });

        if (response.ok) {
          const logs = await response.json();
          const tbody = document.getElementById('log-table-body');
          tbody.innerHTML = logs.map(createTableRow).join('');
        }
      } catch (error) {
        console.error('Failed to fetch audit logs:', error);
      }
    }

    document.getElementById('apply-filters').addEventListener('click', updateTable);
  </script>
</AdminLayout>
