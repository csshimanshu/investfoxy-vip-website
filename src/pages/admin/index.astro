---
import AdminLayout from '../../layouts/AdminLayout.astro';
import content from '../../data/content.json';
import { readFileSync } from 'fs';
import { join } from 'path';

interface Interest {
  id: string;
  tradingExperience: string;
  selectedPlan: string;
  email: string;
  discordId?: string;
  date: string;
}

const profitsCount = content.profits.length;
const testimonialsCount = content.testimonials.length;
const totalROI = content.testimonials.reduce((sum, t) => sum + t.roi, 0) / content.testimonials.length;

// Read interests data
let interests: Interest[] = [];
try {
  const interestsPath = join(process.cwd(), 'src/data/interests.json');
  interests = JSON.parse(readFileSync(interestsPath, 'utf-8'));
} catch (error) {
  console.error('Error reading interests:', error);
}

// Sort interests by date, most recent first
interests.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

---

<AdminLayout title="Dashboard">
  <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
    <!-- Stats Cards -->
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <dt class="text-sm font-medium text-gray-500 truncate">Total Profit Slides</dt>
        <dd class="mt-1 text-3xl font-semibold text-gray-900">{profitsCount}</dd>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <dt class="text-sm font-medium text-gray-500 truncate">Total Testimonials</dt>
        <dd class="mt-1 text-3xl font-semibold text-gray-900">{testimonialsCount}</dd>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <dt class="text-sm font-medium text-gray-500 truncate">Average ROI</dt>
        <dd class="mt-1 text-3xl font-semibold text-gray-900">{totalROI.toFixed(1)}%</dd>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <dt class="text-sm font-medium text-gray-500 truncate">Interested Customers</dt>
        <dd class="mt-1 text-3xl font-semibold text-gray-900" data-interest-count>{interests.length}</dd>
      </div>
    </div>
  </div>

  <!-- Quick Actions -->
  <div class="mt-8">
    <h2 class="text-lg font-medium text-gray-900 mb-4">Quick Actions</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      <a href="/admin/branding" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
        Update Branding
      </a>
      <a href="/admin/profits" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
        Manage Profits
      </a>
      <a href="/admin/testimonials" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
        Manage Testimonials
      </a>
    </div>
  </div>

  <!-- Form Data (Interest Customers) -->
  <div class="mt-8">
    <h2 class="text-lg font-medium text-gray-900 mb-4">Form Data (Interest Customers)</h2>
    <div class="bg-white shadow overflow-hidden sm:rounded-lg">
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Trading Experience</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Selected Plan</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Discord ID</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {interests.map((interest) => (
              <tr id={`interest-${interest.id}`}>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {new Date(interest.date).toLocaleDateString()}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {interest.email}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {interest.tradingExperience}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {interest.selectedPlan}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {interest.discordId || '-'}
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <button
                    data-delete-button
                    data-interest-id={interest.id}
                    class="text-red-600 hover:text-red-900 focus:outline-none"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))}
            {interests.length === 0 && (
              <tr>
                <td colspan="6" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                  No form submissions yet
                </td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</AdminLayout>

<script is:inline>
  // Add event listeners after DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('[data-delete-button]');
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const id = button.getAttribute('data-interest-id');
        
        if (!id || !confirm('Are you sure you want to delete this entry?')) {
          return;
        }

        try {
          const response = await fetch(`/api/interests/${id}`, {
            method: 'DELETE',
          });

          const result = await response.json();

          if (result.success) {
            // Remove the row from the table
            const row = document.getElementById(`interest-${id}`);
            if (row) {
              row.remove();
            }

            // Update the count in the stats card
            const countElement = document.querySelector('[data-interest-count]');
            if (countElement) {
              const currentCount = parseInt(countElement.textContent || '0');
              countElement.textContent = (currentCount - 1).toString();
            }
          } else {
            alert('Failed to delete: ' + result.message);
          }
        } catch (error) {
          console.error('Error deleting interest:', error);
          alert('An error occurred while deleting the entry');
        }
      });
    });
  });
</script>
